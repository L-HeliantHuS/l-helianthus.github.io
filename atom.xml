<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HeliantHuS Blog</title>
  
  <subtitle>Python/Go Devloper</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://l-helianthus.github.io/"/>
  <updated>2019-09-29T14:20:42.342Z</updated>
  <id>http://l-helianthus.github.io/</id>
  
  <author>
    <name>HeliantHuS</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nessus系统漏洞扫描平台(VMware傻瓜式安装)</title>
    <link href="http://l-helianthus.github.io/2019/09/30/3-Nessus-Install-or-Use-and-License/"/>
    <id>http://l-helianthus.github.io/2019/09/30/3-Nessus-Install-or-Use-and-License/</id>
    <published>2019-09-29T21:44:44.000Z</published>
    <updated>2019-09-29T14:20:42.342Z</updated>
    
    <content type="html"><![CDATA[<p>最懊恼的就是安装这种软件了，免费版本只能扫描16个IP，收费版本在天朝没人会去买，买完也没人去分享，而现在，我来安利一波可以无限IP，而且还傻瓜式的Nessus安装方式.</p><a id="more"></a><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><ol><li>VMware Workstation (Version &gt;= 12)</li><li>科学上网工具</li><li>眼睛和脑子</li></ol><h2 id="下载Nessus-VMware版"><a href="#下载Nessus-VMware版" class="headerlink" title="下载Nessus(VMware版)"></a>下载Nessus(VMware版)</h2><p><a href="https://mega.nz/#!0YkSDYpY!JndpKpH5yB3hDNV-091jOwPhW9rLK9iNSzuF9nTz-i0" target="_blank" rel="noopener">https://mega.nz/#!0YkSDYpY!JndpKpH5yB3hDNV-091jOwPhW9rLK9iNSzuF9nTz-i0</a></p><h2 id="部署Nessus"><a href="#部署Nessus" class="headerlink" title="部署Nessus"></a>部署Nessus</h2><h4 id="导入至VMware"><a href="#导入至VMware" class="headerlink" title="导入至VMware"></a>导入至VMware</h4><p>首先解压下载的压缩文件，放到你能记得住的地方</p><p>然后打开<code>vmware</code>, <code>File -&gt; Open</code>, 选择<code>Nessus 8_VM12.ovf</code>文件.</p><p><img src="/images/3/vmware1.jpg" alt><br><img src="/images/3/vmware2.jpg" alt></p><h4 id="开机运行-配置网卡"><a href="#开机运行-配置网卡" class="headerlink" title="开机运行 配置网卡"></a>开机运行 配置网卡</h4><p>默认的用户名和密码都在描述中写了, 按照描述进行操作绝对没问题的.<br><img src="/images/3/description.jpg" alt></p><p>开机你肯定没问题了，按照他的要求访问<code>https://1.1.2.1:8834</code>你肯定访问不了，你需要修改网卡配置</p><p>这样，将网卡2改成NAT<br><img src="/images/3/setting.jpg" alt></p><p>就可以自动获取IP地址, 获取完毕直接输入<code>ifconfig</code>查看自动获取的IP地址, 访问自动获取的IP地址加端口号…哦对了, 一定要是<code>https</code>, 比如我自动获取的IP地址为<code>192.168.23.134</code>, 那么我在我物理机访问<code>https://192.168.23.134:8834</code>就可以了.<br><img src="/images/3/nessus.jpg" alt></p><p>到这里就完全可以正常运行以及进行扫描了, 怎么运行扫描就要看你了, 赶紧继续学习吧~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最懊恼的就是安装这种软件了，免费版本只能扫描16个IP，收费版本在天朝没人会去买，买完也没人去分享，而现在，我来安利一波可以无限IP，而且还傻瓜式的Nessus安装方式.&lt;/p&gt;
    
    </summary>
    
    
      <category term="网络安全" scheme="http://l-helianthus.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="http://l-helianthus.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
      <category term="扫描" scheme="http://l-helianthus.github.io/tags/%E6%89%AB%E6%8F%8F/"/>
    
      <category term="漏洞" scheme="http://l-helianthus.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>Paramiko Python远程ssh库</title>
    <link href="http://l-helianthus.github.io/2019/09/29/2-paramiko-remote-exec/"/>
    <id>http://l-helianthus.github.io/2019/09/29/2-paramiko-remote-exec/</id>
    <published>2019-09-28T22:38:02.000Z</published>
    <updated>2019-09-28T15:51:03.226Z</updated>
    
    <content type="html"><![CDATA[<p>Paramiko是一个Python的远程操作库，可以进行<code>SSH</code>, <code>SFTP</code>等远程连接操作. 来学习学习怎么使用吧</p><a id="more"></a><h1 id="安装Paramiko"><a href="#安装Paramiko" class="headerlink" title="安装Paramiko"></a>安装Paramiko</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install paramiko</span><br></pre></td></tr></table></figure><h1 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h1><h3 id="导入paramiko"><a href="#导入paramiko" class="headerlink" title="导入paramiko"></a>导入paramiko</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> paramiko</span><br></pre></td></tr></table></figure><h3 id="初始化SSHClient"><a href="#初始化SSHClient" class="headerlink" title="初始化SSHClient"></a>初始化SSHClient</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">client = paramiko.SSHClient()</span><br><span class="line">client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br></pre></td></tr></table></figure><h3 id="连接主机"><a href="#连接主机" class="headerlink" title="连接主机"></a>连接主机</h3><p>我的<code>Linux</code>主机是<code>192.168.1.40</code>，用户名为<code>root</code>, 密码为<code>admin123.</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client.connect(hostname=<span class="string">"192.168.1.40"</span>, username=<span class="string">"root"</span>, password=<span class="string">"admin123."</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/2/warning.jpg" alt="warning"><br>连接上会有几条警告，可以无视掉，或者直接<a href="https://github.com/paramiko/paramiko/issues/1386#issuecomment-470847772" target="_blank" rel="noopener">屏蔽警告信息</a></p><h3 id="发送命令"><a href="#发送命令" class="headerlink" title="发送命令"></a>发送命令</h3><p>执行一个<code>ifconfig</code>命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stdin, stdout, stderr = client.exec_command(<span class="string">"ifconfig"</span>)</span><br></pre></td></tr></table></figure><p>注意这里, <code>exec_command</code>的返回值为tuple类型<br>可以通过<code>python3 -m pydoc paramiko.SSHClient.exec_command</code>查看源码.<br><img src="/images/2/pydoc.jpg" alt="PyDoc"></p><h3 id="查看命令返回值"><a href="#查看命令返回值" class="headerlink" title="查看命令返回值"></a>查看命令返回值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> stdout.readlines():</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><p><img src="/images/2/ifconfig.jpg" alt="ifconfig"><br>这样就得到了返回值</p><h3 id="关闭连接"><a href="#关闭连接" class="headerlink" title="关闭连接"></a>关闭连接</h3><p>不要总是依赖上下文, 要学会手动释放资源关闭连接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client.close()</span><br></pre></td></tr></table></figure><p>到这里, <code>paramiko</code>的<code>SSHClient</code>用法就结束了，<code>paramiko</code>还支持<code>SFTPClient</code>等其他远程操作, 自己发掘吧~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Paramiko是一个Python的远程操作库，可以进行&lt;code&gt;SSH&lt;/code&gt;, &lt;code&gt;SFTP&lt;/code&gt;等远程连接操作. 来学习学习怎么使用吧&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://l-helianthus.github.io/categories/Python/"/>
    
    
      <category term="paramiko" scheme="http://l-helianthus.github.io/tags/paramiko/"/>
    
      <category term="python" scheme="http://l-helianthus.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Simple Reverse (简单的逆向)</title>
    <link href="http://l-helianthus.github.io/2019/09/28/1-Simple-Reverse/"/>
    <id>http://l-helianthus.github.io/2019/09/28/1-Simple-Reverse/</id>
    <published>2019-09-28T12:51:00.000Z</published>
    <updated>2019-09-28T14:41:02.041Z</updated>
    
    <content type="html"><![CDATA[<p>学习使用IDA Pro 和 x64dbg反编译一个C语言程序.</p><a id="more"></a><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><ol start="0"><li>DevC++</li><li>IDA Pro</li><li>x64dbg</li></ol><h2 id="开始动手！"><a href="#开始动手！" class="headerlink" title="开始动手！"></a>开始动手！</h2><p>我直接做成了视频. 直接来看吧.<br><a href="https://www.bilibili.com/video/av69174106" target="_blank" rel="noopener">【逆向工程】IDA Pro + x64dgb反编译一个应用程序</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习使用IDA Pro 和 x64dbg反编译一个C语言程序.&lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="http://l-helianthus.github.io/categories/CTF/"/>
    
    
      <category term="reverse" scheme="http://l-helianthus.github.io/tags/reverse/"/>
    
  </entry>
  
</feed>
